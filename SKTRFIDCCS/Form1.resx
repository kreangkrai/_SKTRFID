<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wKAG/wHCxOIvYtWIKQAAAABJRU5ErkJggg==
</value>
  </data>
</root>